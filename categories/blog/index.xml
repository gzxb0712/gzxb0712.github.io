<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>blog on Bill World</title>
    <link>https://xiebiao.top/categories/blog/</link>
    <description>Recent content in blog on Bill World</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sun, 02 Feb 2020 21:28:04 +0000</lastBuildDate><atom:link href="https://xiebiao.top/categories/blog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>GitHub &#43; jsDelivr &#43; PicGo &#43; Imagine打造稳定快速高效免费图床</title>
      <link>https://xiebiao.top/post/blog/github_jsdelivr_ops/</link>
      <pubDate>Sun, 02 Feb 2020 21:28:04 +0000</pubDate>
      
      <guid>https://xiebiao.top/post/blog/github_jsdelivr_ops/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;前言-前言前言&#34;&gt;&lt;a href=&#34;#%E5%89%8D%E8%A8%80&#34; title=&#34;前言&#34;&gt;&lt;/a&gt;前言&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;为什么要使用图床呢？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;因为在不同平台发布同一篇文章的时候，最一个痛苦的点就是，图片存储问题，各个平台的文件存储方式各不相同，无法直接 &lt;code&gt;Ctrl + C&lt;/code&gt; 的方式一键搞定，为了解决这个问题，使用 &lt;code&gt;MarkDown + 图床&lt;/code&gt; 的方式进行文章的写作，将图片放到一个统一的地方，在文章中引入图片外链。
所谓图床，就是将图片储存到第三方静态资源库中，其返回给你一个 URL 进行获取图片。&lt;code&gt;MarkDown&lt;/code&gt; 支持使用 URL 的方式显示图片，我想这也是程序员为什么对其偏爱的原因之一。
作为程序员，你会发现，现在很多论坛和社区都开始支持使用 &lt;code&gt;MarkDown&lt;/code&gt;，如果你没使用图床的情况下，你分享同一篇文章，你要在不同的平台，各自重新编辑排版一遍和上传图片一次。
有了图床，情况就不一样了，&lt;code&gt;Ctrl+C&lt;/code&gt; 的方式就搞定了，根本不用再 Check 文章内容一遍。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Hugo &#43; Github Pages &#43; picgo搭建个人技术博客</title>
      <link>https://xiebiao.top/post/blog/creat-hugo-blog/</link>
      <pubDate>Sat, 12 Oct 2019 20:28:04 +0000</pubDate>
      
      <guid>https://xiebiao.top/post/blog/creat-hugo-blog/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;尝试过 Hexo 、GatsbyJs、 Vuepress 搭建博客后，对这些工具最大的不满，就是运行速度以及打包速度。&lt;/p&gt;
&lt;p&gt;后来看到 &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt; ,号称最快的静态站点生成器后。&lt;/p&gt;
&lt;p&gt;尝试搭建博客，发现不管是运行速度，还是打包速度超级快，果断将个人博客迁移到 Hugo。
Hugo 官方的定义是：&lt;/p&gt;
&lt;p&gt;Hugo is a fast and modern static site generator written in Go, and designed to make website creation fun again.(Hugo 是使用 Go 编写的快速而现代的静态站点生成器，旨在使网站创建变得有趣。)&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
